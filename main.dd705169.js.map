{"version":3,"sources":["scripts/main.js"],"names":["people","document","querySelector","peopleList","querySelectorAll","salaryFormating","person","Number","salary","replace","sortList","list","sort","emp1","emp2","getEmployees","map","employee","name","innerText","dataset","innerHTML","reduce","acc","curr"],"mappings":";AACA,aAsBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAASC,SAASC,cAAc,MAChCC,EAAaF,SAASG,iBAAiB,MAEvCC,EAAkB,SAACC,GACvBC,OAAAA,OAAOD,EAAOE,OAAOC,QAAQ,SAAU,MAGnCC,EAAW,SAACC,GACTA,OAAAA,EAAKC,KAAK,SAACC,EAAMC,GACtBT,OAAAA,EAAgBS,GAAQT,EAAgBQ,MAItCE,EAAe,SAACJ,GACb,OAAA,EAAIA,GAAMK,IAAI,SAAAC,GAAQ,OAAA,EAAA,CAC3BC,KAAMD,EAASE,WACZF,EAASG,YAIhBpB,EAAOqB,UAAYX,EAASK,EAAaZ,IACtCmB,OAAO,SAACC,EAAKC,GACZD,OAAAA,EAAaC,OAAAA,OAAAA,EAAKN,KADZ,UAEL","file":"main.dd705169.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nconst people = document.querySelector('ul');\nconst peopleList = document.querySelectorAll('li');\n\nconst salaryFormating = (person) => (\n  Number(person.salary.replace(/[$,]+/g, ''))\n);\n\nconst sortList = (list) => {\n  return list.sort((emp1, emp2) => (\n    salaryFormating(emp2) - salaryFormating(emp1))\n  );\n};\n\nconst getEmployees = (list) => {\n  return [...list].map(employee => ({\n    name: employee.innerText,\n    ...employee.dataset,\n  }));\n};\n\npeople.innerHTML = sortList(getEmployees(peopleList))\n  .reduce((acc, curr) => (\n    acc + `<li>${curr.name}</li>`\n  ), '');\n"]}